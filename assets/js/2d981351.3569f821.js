"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1551],{3905:(e,n,r)=>{r.d(n,{Zo:()=>u,kt:()=>f});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=t.createContext({}),l=function(e){var n=t.useContext(o),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},u=function(e){var n=l(e.components);return t.createElement(o.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},b=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(r),b=a,f=p["".concat(o,".").concat(b)]||p[b]||m[b]||s;return r?t.createElement(f,c(c({ref:n},u),{},{components:r})):t.createElement(f,c({ref:n},u))}));function f(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=r.length,c=new Array(s);c[0]=b;var i={};for(var o in n)hasOwnProperty.call(n,o)&&(i[o]=n[o]);i.originalType=e,i[p]="string"==typeof e?e:a,c[1]=i;for(var l=2;l<s;l++)c[l]=r[l];return t.createElement.apply(null,c)}return t.createElement.apply(null,r)}b.displayName="MDXCreateElement"},4202:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var t=r(7462),a=(r(7294),r(3905));const s={},c=void 0,i={unversionedId:"learn-in-public/Engineering/Infrastructure/kubernetes/How to access services in K8s",id:"learn-in-public/Engineering/Infrastructure/kubernetes/How to access services in K8s",title:"How to access services in K8s",description:"kubernetes #externalname #namespaces #dns #k8s",source:"@site/docs/learn-in-public/1. Engineering/Infrastructure/kubernetes/How to access services in K8s.md",sourceDirName:"learn-in-public/1. Engineering/Infrastructure/kubernetes",slug:"/learn-in-public/Engineering/Infrastructure/kubernetes/How to access services in K8s",permalink:"/docs/learn-in-public/Engineering/Infrastructure/kubernetes/How to access services in K8s",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"learn-in-public",previous:{title:"Finalizers",permalink:"/docs/learn-in-public/Engineering/Infrastructure/kubernetes/Finalizers"},next:{title:"Kubernetes shorcuts and alias",permalink:"/docs/learn-in-public/Engineering/Infrastructure/kubernetes/Kubernetes shorcuts and alias"}},o={},l=[],u={toc:l},p="wrapper";function m(e){let{components:n,...r}=e;return(0,a.kt)(p,(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"#services #kubernetes #externalname #namespaces #dns #k8s"),(0,a.kt)("p",null,"To access services in other namespaces referring only by service-name we need the below pattern."),(0,a.kt)("p",null,'We need to use the "bridge" pattern - which is basically creating a service in the current namespace using external name and service DNS such as '),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"kind: Service\napiVersion: v1\nmetadata:\n  name: service-y\n  namespace: namespace-a\nspec:\n  type: ExternalName\n  externalName: service-y.namespace-b.svc.cluster.local\n  ports:\n  - port: 80\n")),(0,a.kt)("p",null,"For simple access, Kubernetes resolves the DNS such as\n",(0,a.kt)("inlineCode",{parentName:"p"},"<service-name>.<namespace>.svc.cluster.local")))}m.isMDXComponent=!0}}]);