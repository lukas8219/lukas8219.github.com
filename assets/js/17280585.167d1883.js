"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[460],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>b});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,b=p["".concat(l,".").concat(m)]||p[m]||d[m]||r;return n?i.createElement(b,s(s({ref:t},u),{},{components:n})):i.createElement(b,s({ref:t},u))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:a,s[1]=o;for(var c=2;c<r;c++)s[c]=n[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},70636:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var i=n(87462),a=(n(67294),n(3905));const r={book:"Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems - Martin Kleppman",tags:["consensus","consistency","faulttolerance","distributedconsistencymodels","distributedsystems","linearizability","recencyguarantee","strongconsistency","wip"]},s=void 0,o={unversionedId:"learn-in-public/Engineering/Distributed Systems/Consensus",id:"learn-in-public/Engineering/Distributed Systems/Consensus",title:"Consensus",description:"This is the case for transaction on database, that abstract away all the logic for atomicity, isolation and durability.",source:"@site/docs/learn-in-public/1. Engineering/Distributed Systems/Consensus.md",sourceDirName:"learn-in-public/1. Engineering/Distributed Systems",slug:"/learn-in-public/Engineering/Distributed Systems/Consensus",permalink:"/docs/learn-in-public/Engineering/Distributed Systems/Consensus",draft:!1,tags:[{label:"consensus",permalink:"/docs/tags/consensus"},{label:"consistency",permalink:"/docs/tags/consistency"},{label:"faulttolerance",permalink:"/docs/tags/faulttolerance"},{label:"distributedconsistencymodels",permalink:"/docs/tags/distributedconsistencymodels"},{label:"distributedsystems",permalink:"/docs/tags/distributedsystems"},{label:"linearizability",permalink:"/docs/tags/linearizability"},{label:"recencyguarantee",permalink:"/docs/tags/recencyguarantee"},{label:"strongconsistency",permalink:"/docs/tags/strongconsistency"},{label:"wip",permalink:"/docs/tags/wip"}],version:"current",frontMatter:{book:"Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems - Martin Kleppman",tags:["consensus","consistency","faulttolerance","distributedconsistencymodels","distributedsystems","linearizability","recencyguarantee","strongconsistency","wip"]},sidebar:"learn-in-public",previous:{title:"Clock Issues and Clock Skew",permalink:"/docs/learn-in-public/Engineering/Distributed Systems/Clock Issues and Clock Skew"},next:{title:"Distributed Computing",permalink:"/docs/learn-in-public/Engineering/Distributed Systems/Distributed Computing"}},l={},c=[{value:"Cap Theorem",id:"cap-theorem",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-quote"},'"The best way to build fault tolerant system is to find some general purpose abstraction with some guarantees and assumptions and let the system operate over those guarantees.\n')),(0,a.kt)("p",null,"This is the case for transaction on database, that abstract away all the logic for atomicity, isolation and durability."),(0,a.kt)("p",null,'"A general challenges of distributed system is to all nodes agree upon something; that is consensus"'),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Distributed consistency models are somewhat similar to the hierarchy of transaction isolation levels")),(0,a.kt)("p",null,"Although they overlap, they have different concerns: ",(0,a.kt)("strong",{parentName:"p"},"Transaction")," concerns race conditions and concurrency.\nAnd ",(0,a.kt)("strong",{parentName:"p"},"Distributed Models")," are more of ",(0,a.kt)("em",{parentName:"p"},"coordinating the state of replicas when facing delays or faults")),(0,a.kt)("h3",{id:"cap-theorem"},"Cap Theorem"),(0,a.kt)("p",null,"CAP Theorem states that out of:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Consistency"),(0,a.kt)("li",{parentName:"ul"},"Partition"),(0,a.kt)("li",{parentName:"ul"},"Availability")),(0,a.kt)("p",null,"You can only obtain up to 2 out of 3 of these traits - and on a context of Distributed Models you are left with: ",(0,a.kt)("inlineCode",{parentName:"p"},"Either Consistent or Available when Partitioned"),"\nCAP is not something practical, since it never got in to ",(0,a.kt)("inlineCode",{parentName:"p"},"a real theorem level"),". It just historically important for the culture shift.\nLinearizability is almost as proportional as the uncertainty and unreliability of the network. So its slow, in all occasions."))}d.isMDXComponent=!0}}]);