"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1531],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(t),g=i,d=p["".concat(c,".").concat(g)]||p[g]||f[g]||o;return t?r.createElement(d,a(a({ref:n},u),{},{components:t})):r.createElement(d,a({ref:n},u))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=g;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},87920:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=t(87462),i=(t(67294),t(3905));const o={},a=void 0,l={unversionedId:"learn-in-public/Engineering/Infrastructure/Containerization/Flannel - Container Networking Interface",id:"learn-in-public/Engineering/Infrastructure/Containerization/Flannel - Container Networking Interface",title:"Flannel - Container Networking Interface",description:"Flannel is one of the most popular CNI plugins used and deployed in the wild given it's really straightforward and simple to setup",source:"@site/docs/learn-in-public/1. Engineering/Infrastructure/Containerization/Flannel - Container Networking Interface.md",sourceDirName:"learn-in-public/1. Engineering/Infrastructure/Containerization",slug:"/learn-in-public/Engineering/Infrastructure/Containerization/Flannel - Container Networking Interface",permalink:"/docs/learn-in-public/Engineering/Infrastructure/Containerization/Flannel - Container Networking Interface",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"learn-in-public",previous:{title:"CNI - Container Network Interface",permalink:"/docs/learn-in-public/Engineering/Infrastructure/Containerization/CNI"},next:{title:"Disk IO Challenges",permalink:"/docs/learn-in-public/Engineering/Infrastructure/Disk IO Challenges"}},c={},s=[],u={toc:s},p="wrapper";function f(e){let{components:n,...t}=e;return(0,i.kt)(p,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Flannel is one of the most popular CNI plugins used and deployed in the wild given it's really straightforward and simple to setup"),(0,i.kt)("p",null,"It's one of the simplest networking setup since all it does is create ",(0,i.kt)("inlineCode",{parentName:"p"},"flat network")," - consisting a bunch of bridges and making pod-to-pod communication, inter-cluster, seemingless. Pods have unique IP addresses shared between the entire cluster. So 1 Pod should never have conflicting IP addresses, even thou it is deployed in different Nodes.\nAlthought it makes possible for pod-to-pod, it can be a big performance bottleneck."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.eficode.com/blog/debugging-kubernetes-networking"},"https://www.eficode.com/blog/debugging-kubernetes-networking")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl -n kube-system get configmap kube-flannel-cfg -o yaml\n")))}f.isMDXComponent=!0}}]);